/*
All content ContentCopyright 2016 DigiPen Institute of Technology Singapore. All Rights Reserved

Primary Author: Koh Wen Lin
Code that was done: 100%

Brief Description : 
        Implement functions for what the Resume button does when clicked. Resume the game.

*/

class ResumeButtonLogic : ZilchComponent
{
    //Variable to store main space
    var MainSpace : Space = null;
    
    //Default and Hovered Sprites for button
    [Property]
    var DefaultSprite : SpriteSource;
    [Property]
    var HoveredSprite : SpriteSource;
    
    //Variable to store required button cog
    var QuitGame : Cog;
    
    function Initialize(init : CogInitializer)
    {
        //Initialize variables
        this.MainSpace = this.GameSession.FindSpaceByName("Main");
        this.QuitGame = this.Space.FindObjectByName("QuitGameButton");
        
        //Connects ViewPortMouse Events required
        Zero.Connect(this.Owner, Events.MouseDown, this.OnMouseDown);
        Zero.Connect(this.Owner, Events.MouseEnter, this.OnMouseEnter);
        Zero.Connect(this.Owner, Events.MouseExit, this.OnMouseExit);
    }
    
    function OnMouseDown(event : ViewportMouseEvent)
    {
        //Execute button function when click if quit confirmation is not displayed
        if(!this.QuitGame.QuitGameButtonLogic.IsConfirmOn)
            this.ClickedState();
    }
    
    function OnMouseEnter(event : ViewportMouseEvent)
    {
        //Changes to Hover Sprite when mouse over
        this.HoveredState();
    }

    function OnMouseExit(event : ViewportMouseEvent)
    {
        //Changes to Default Sprite when mouse exit
        this.DefaultState();
    }
    
    //Function for when button is clicked
    function ClickedState()
    {
        //Close game menu
        this.Space.FindObjectByName("GameMenu").GameMenuLogic.OnGameMenu(false);
    }
    
    function DefaultState()
    {
        //Set sprite to default sprite
        this.Owner.Sprite.SpriteSource = this.DefaultSprite;
    }

    function HoveredState()
    {
        //Set sprite to hovered sprite
        this.Owner.Sprite.SpriteSource = this.HoveredSprite;
    }
}